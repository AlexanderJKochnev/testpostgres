# docker-compose.yaml
services:
  test_host:
    restart: unless-stopped
    container_name: ${POSTGRES_HOST}
    image: postgres:alpine
    command: postgres -c max_connections=100 -c shared_buffers=256MB
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${PG_PORT}:${POSTGRES_PORT}"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-h", "localhost", "-p", "${POSTGRES_PORT}", "-U", "${POSTGRES_USER}" ]
      # add -h dd in order to avoid message FATAL: role 'root' doesnot exist
      interval: 10s # 1m30s
      timeout: 10s
      retries: 5
      start_period: 40s
      start_interval: 5s
  
  adminer:
    container_name: test_admin
    image: adminer:4.8.1
    restart: unless-stopped
    depends_on:
      test_host:
        condition: service_healthy
    environment:
      - ADMINER_PLUGINS=tables-filter enum-option enum-types
      - ADMINER_DESIGN=nette
    ports:
      - "${ADMINER_PORTS}"
  
  test_mongodb:
    image: mongo:4.4.20
    container_name: ${MONGODB_REPLICA_SET_HOST}
    hostname: ${MONGODB_REPLICA_SET_HOST}
    ports:
      - "27019:${MONGODB_PORT}"
    volumes:
      - ./mongodb_data:/data/db
      - ./mongo/docker-entrypoint.sh:/docker-entrypoint.sh:ro
    entrypoint: ["/docker-entrypoint.sh"]
    environment:
      MONGODB_USER_NAME: ${MONGODB_USER_NAME}
      MONGODB_USER_PASSWORD: ${MONGODB_USER_PASSWORD}
      MONGODB_REPLICA_SET: ${MONGODB_REPLICA_SET}
      MONGODB_REPLICA_SET_HOST: ${MONGODB_REPLICA_SET_HOST}
      MONGODB_PORT: ${MONGODB_PORT}
      MONGODB_DATABASE_AUTH_NAME: ${MONGODB_DATABASE_AUTH_NAME}
    healthcheck:
      test: >
        mongo --eval "
          try {
            rs.status().ok === 1 || db.adminCommand('ping').ok === 1
          } catch(e) {
            print('Health check failed:', e);
            exit(1);
          }
        " -u ${MONGODB_USER_NAME} -p ${MONGODB_USER_PASSWORD} --authenticationDatabase ${MONGODB_DATABASE_AUTH_NAME} || exit 1
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 30s

  test_mongo-express:
    image: mongo-express
    container_name: test_mongo-express
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_BASICAUTH_ENABLED: "true"
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGODB_USER_NAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGODB_USER_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${MONGODB_REPLICA_SET_HOST}
      ME_CONFIG_MONGODB_PORT: ${MONGODB_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER_NAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_USER_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_REPLICA: ${MONGODB_REPLICA_SET}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_USER_NAME}:${MONGODB_USER_PASSWORD}@${MONGODB_REPLICA_SET_HOST}:${MONGODB_PORT}/${MONGODB_DATABASE_AUTH_NAME}?replicaSet=${MONGODB_REPLICA_SET}&authSource=${MONGODB_DATABASE_AUTH_NAME}
    depends_on:
      test_mongodb:
        condition: service_healthy

volumes:
  pg_data: # postgresql data
  mongodb_data: