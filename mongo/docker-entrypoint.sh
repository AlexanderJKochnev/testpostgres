#!/bin/sh
set -e

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
: "${MONGODB_USER_NAME:?MONGODB_USER_NAME not set}"
: "${MONGODB_USER_PASSWORD:?MONGODB_USER_PASSWORD not set}"
: "${MONGODB_REPLICA_SET:?MONGODB_REPLICA_SET not set}"
: "${MONGODB_REPLICA_SET_HOST:?MONGODB_REPLICA_SET_HOST not set}"
: "${MONGODB_PORT:?MONGODB_PORT not set}"
: "${MONGODB_DATABASE_AUTH_NAME:?MONGODB_DATABASE_AUTH_NAME not set}"

KEYFILE=/etc/mongo.key

echo "üîê –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º keyfile..."
head -c 756 /dev/urandom | base64 > "$KEYFILE"
chmod 600 "$KEYFILE"

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º mongod (—ç—Ç–∞–ø 1: –±–µ–∑ auth)..."
mongod \
  --replSet "${MONGODB_REPLICA_SET}" \
  --bind_ip_all \
  --port "${MONGODB_PORT}" \
  --dbpath /data/db \
  --fork \
  --logpath /tmp/mongod-init.log

echo "‚è≥ –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ mongod..."
timeout=15
while ! mongo --host "127.0.0.1" --port "${MONGODB_PORT}" --eval "db.adminCommand('ping')" >/dev/null 2>&1; do
  sleep 1
  timeout=$((timeout - 1))
  if [ "$timeout" -le 0 ]; then
    echo "‚ùå mongod –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    pkill mongod
    exit 1
  fi
done
echo "‚úÖ mongod –∑–∞–ø—É—â–µ–Ω"

echo "üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Replica Set..."
RS_INIT_CHECK=$(mongo --host "127.0.0.1" --port "${MONGODB_PORT}" --quiet --eval "try { rs.status().ok } catch(e) { 0 }")
if [ "$RS_INIT_CHECK" != "1" ]; then
  echo "üß± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º rs.initiate..."
  mongo --host "127.0.0.1" --port "${MONGODB_PORT}" --eval "
    rs.initiate({
      _id: '${MONGODB_REPLICA_SET}',
      members: [{ _id: 0, host: '${MONGODB_REPLICA_SET_HOST}:${MONGODB_PORT}' }]
    });
  "
  echo "‚úÖ Replica Set –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
else
  echo "‚ÑπÔ∏è Replica Set —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
fi

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ PRIMARY..."
timeout=30
while true; do
  PRIMARY=$(mongo --host "127.0.0.1" --port "${MONGODB_PORT}" --quiet --eval "rs.isMaster().ismaster" 2>/dev/null || echo "false")
  if [ "$PRIMARY" = "true" ]; then
    echo "‚úÖ Node —Å—Ç–∞–ª PRIMARY"
    break
  fi
  sleep 1
  timeout=$((timeout - 1))
  if [ "$timeout" -le 0 ]; then
    echo "‚ùå –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è PRIMARY"
    exit 1
  fi
done

echo "üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
EXISTS=$(mongo --host "127.0.0.1" --port "${MONGODB_PORT}" --quiet --eval "
  db.getSiblingDB('${MONGODB_DATABASE_AUTH_NAME}').system.users.find({user:'${MONGODB_USER_NAME}'}).count()
")
if [ "$EXISTS" -eq 0 ]; then
  mongo --host "127.0.0.1" --port "${MONGODB_PORT}" "${MONGODB_DATABASE_AUTH_NAME}" --eval "
    db.createUser({
      user: '${MONGODB_USER_NAME}',
      pwd: '${MONGODB_USER_PASSWORD}',
      roles: [{ role: 'root', db: '${MONGODB_DATABASE_AUTH_NAME}' }]
    });
  "
  echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω"
else
  echo "‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

echo "üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π mongod..."
mongo --host "127.0.0.1" --port "${MONGODB_PORT}" --eval "db.getSiblingDB('admin').shutdownServer()" || true
sleep 5

echo "üîê –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π mongod —Å auth –∏ keyFile..."
exec mongod \
  --replSet "${MONGODB_REPLICA_SET}" \
  --auth \
  --keyFile "$KEYFILE" \
  --bind_ip_all \
  --port "${MONGODB_PORT}" \
  --dbpath /data/db